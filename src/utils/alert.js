// üìÅ src/utils/alert.js
import Swal from "sweetalert2";

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
export function notify({ title = "", text = "", html = "", confirmText = "‡∏ï‡∏Å‡∏•‡∏á" } = {}) {
  return Swal.fire({
    title,
    text,
    html: html || text, // Use html if provided, otherwise use text
    confirmButtonText: confirmText,
    confirmButtonColor: "#F5D8EB",
    backdrop: true,
    showCloseButton: true,
    allowEscapeKey: true,
    didOpen: () => {
      const titleEl = Swal.getTitle();
      if (titleEl) titleEl.style.color = "#F0A4D6";
    },
  });
}

export function success(message) {
  return notify({ title: "‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", text: message });
}

export function info(message) {
  return notify({ title: "‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô", text: message });
}

// ‚úÖ ‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
export async function loginAlert({
  title = "‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö",
  confirmText = "‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö",
  cancelText = "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
  showRemember = true,
} = {}) {
  const result = await Swal.fire({
    title,
    html: `
      <form id="swal-login-form" class="swal2-content ms-wrap" style="margin-top:4px" autocomplete="off">
        <style>
          .ms-wrap .swal2-input {
            width: 100% !important;
            box-sizing: border-box;
            height: 38px;
            padding: 8px 38px 8px 10px;
            font-size: 14px;
            margin: 4px 0 6px;
          }
          .ms-wrap .eye-icon {
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            opacity: 0.6;
          }
          .ms-wrap .swal2-input-wrapper {
            position: relative;
          }
        </style>
        <input id="swal-login-username" name="username" class="swal2-input" placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ" type="text" autocomplete="username" />
        <div class="swal2-input-wrapper">
          <input id="swal-login-password" name="password" class="swal2-input" placeholder="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô" type="password" autocomplete="current-password" />
          <span id="toggle-login-pass" class="eye-icon">üëÅÔ∏è</span>
        </div>
        ${
          showRemember
            ? '<label style="display:flex;gap:6px;align-items:center;justify-content:flex-start;margin:4px 2px 0"><input id="swal-login-remember" type="checkbox" checked /> <span style="font-size:0.9rem">‡∏à‡∏î‡∏à‡∏≥‡∏â‡∏±‡∏ô</span></label>'
            : ""
        }
      </form>
    `,
    didOpen: () => {
      const titleEl = Swal.getTitle();
      if (titleEl) titleEl.style.color = "#F0A4D6";
      const toggle = document.getElementById("toggle-login-pass");
      const pass = document.getElementById("swal-login-password");
      toggle?.addEventListener("click", () => {
        const show = pass.type === "password";
        pass.type = show ? "text" : "password";
        toggle.textContent = show ? "üôà" : "üëÅÔ∏è";
      });
    },
    focusConfirm: false,
    showCancelButton: true,
    confirmButtonText: confirmText,
    cancelButtonText: cancelText,
    confirmButtonColor: "#F5D8EB",
    reverseButtons: true,
    showCloseButton: true,
    allowEscapeKey: true,
    allowOutsideClick: () => !Swal.isLoading(),
    preConfirm: () => {
      const username = document.getElementById("swal-login-username")?.value?.trim();
      const password = document.getElementById("swal-login-password")?.value ?? "";
      const remember = document.getElementById("swal-login-remember")?.checked ?? false;

      if (!username || !password) {
        Swal.showValidationMessage("‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö");
        return false;
      }
      return { username, password, remember };
    },
  });

  if (result.isConfirmed && result.value) return result.value;
  return null;
}

// ‚úÖ ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà
export async function registerAlert({
  title = "‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô",
  confirmText = "‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô",
  cancelText = "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
} = {}) {
  const result = await Swal.fire({
    title,
    html: `
      <form id="swal-register-form" class="swal2-content ms-wrap" style="margin-top:4px" autocomplete="off">
        <style>
          .ms-wrap .ms-field { margin-top: 8px; position: relative; }
          .ms-wrap .ms-field label {
            display:block;
            margin-bottom:4px;
            font-size:14px;
            color:#F0A4D6;
          }
          .ms-wrap .swal2-input {
            width: 100% !important;
            box-sizing: border-box;
            height: 38px;
            padding: 8px 38px 8px 10px;
            font-size: 14px;
            margin: 2px 0 4px;
          }
          .eye-icon {
            position: absolute;
            right: 12px;
            top: 62%;
            transform: translateY(-50%);
            cursor: pointer;
            opacity: 0.6;
          }
        </style>
        <div class="ms-field">
          <label for="swal-reg-username">‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô)</label>
          <input id="swal-reg-username" class="swal2-input" placeholder="‡πÄ‡∏ä‡πà‡∏ô momsure01" type="text" autocomplete="username" />
        </div>
        <div class="ms-field">
          <label for="swal-reg-name">‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á (‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô)</label>
          <input id="swal-reg-name" class="swal2-input" placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡πÅ‡∏°‡πà‡∏û‡∏≠‡πÉ‡∏à" type="text" autocomplete="name" />
        </div>
        <div class="ms-field">
          <label for="swal-reg-password">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</label>
          <input id="swal-reg-password" class="swal2-input" placeholder="‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 6 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏ç‡πà 1 ‡∏ï‡∏±‡∏ß" type="password" autocomplete="new-password" />
          <span id="toggle-reg-pass" class="eye-icon">üëÅÔ∏è</span>
        </div>
        <div class="ms-field">
          <label for="swal-reg-confirm">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</label>
          <input id="swal-reg-confirm" class="swal2-input" placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ã‡πâ‡∏≥‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á" type="password" autocomplete="new-password" />
          <span id="toggle-reg-confirm" class="eye-icon">üëÅÔ∏è</span>
        </div>
        <div class="ms-field" >
          <label for="swal-reg-education">‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤</label>
          <select id="swal-reg-education" class="swal2-input">
            <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤</option>
            <option value="NONE">‡πÑ‡∏°‡πà‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÄ‡∏•‡∏¢</option>
            <option value="PRIMARY">‡∏õ‡∏£‡∏∞‡∏ñ‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤</option>
            <option value="SECONDARY">‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏ï‡πâ‡∏ô</option>
            <option value="HIGH_SCHOOL">‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏õ‡∏•‡∏≤‡∏¢</option>
            <option value="VOCATIONAL">‡∏õ‡∏ß‡∏ä./‡∏õ‡∏ß‡∏™.</option>
            <option value="BACHELOR">‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡∏ï‡∏£‡∏µ</option>
            <option value="MASTER">‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡πÇ‡∏ó</option>
            <option value="DOCTORATE">‡∏õ‡∏£‡∏¥‡∏ç‡∏ç‡∏≤‡πÄ‡∏≠‡∏Å</option>
            <option value="OTHER">‡∏≠‡∏∑‡πà‡∏ô‡πÜ</option>
          </select>
        </div>
        <div class="ms-field hidden">
          <label for="swal-reg-birthday">‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î</label>
          <input id="swal-reg-birthday" class="swal2-input" type="date" />
        </div>
        <div class="ms-field">
          <label for="swal-reg-antenatal-visits">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Å‡∏≤‡∏£‡∏ù‡∏≤‡∏Å‡∏Ñ‡∏£‡∏£‡∏†‡πå</label>
          <input id="swal-reg-antenatal-visits" class="swal2-input" placeholder="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Å‡∏≤‡∏£‡∏ù‡∏≤‡∏Å‡∏Ñ‡∏£‡∏£‡∏†‡πå" type="number" />
        </div>
      </form>
    `,
    didOpen: () => {
      const titleEl = Swal.getTitle();
      if (titleEl) titleEl.style.color = "#F0A4D6";

      const pass = document.getElementById("swal-reg-password");
      const confirm = document.getElementById("swal-reg-confirm");
      const togglePass = document.getElementById("toggle-reg-pass");
      const toggleConfirm = document.getElementById("toggle-reg-confirm");

      const toggle = (input, icon) => {
        const show = input.type === "password";
        input.type = show ? "text" : "password";
        icon.textContent = show ? "üôà" : "üëÅÔ∏è";
      };

      togglePass?.addEventListener("click", () => toggle(pass, togglePass));
      toggleConfirm?.addEventListener("click", () => toggle(confirm, toggleConfirm));
    },
    focusConfirm: false,
    showCancelButton: true,
    confirmButtonText: confirmText,
    cancelButtonText: cancelText,
    confirmButtonColor: "#F5D8EB",
    showCloseButton: true,
    reverseButtons: true,
    allowEscapeKey: true,
    allowOutsideClick: () => !Swal.isLoading(),
    preConfirm: () => {
      const username = document.getElementById("swal-reg-username")?.value?.trim();
      const nameInput = document.getElementById("swal-reg-name")?.value?.trim();
      const password = document.getElementById("swal-reg-password")?.value ?? "";
      const confirmPassword = document.getElementById("swal-reg-confirm")?.value ?? "";
      const educationLevel = document.getElementById("swal-reg-education")?.value;
      const birthday = document.getElementById("swal-reg-birthday")?.value;
      const antenatal_visit_counts = document.getElementById("swal-reg-antenatal-visits")?.value;


      if (!username || !password || !confirmPassword || !nameInput  || !educationLevel || !antenatal_visit_counts) {
        Swal.showValidationMessage("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
        return false;
      }

      if (password.length < 6) {
        Swal.showValidationMessage("‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 6 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£");
        return false;
      }

      if (!/[A-Z]/.test(password)) {
        Swal.showValidationMessage("‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏ç‡πà (A‚ÄìZ) ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏ï‡∏±‡∏ß");
        return false;
      }

      if (password !== confirmPassword) {
        Swal.showValidationMessage("‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô");
        return false;
      }

      const name = nameInput && nameInput.length > 0 ? nameInput : username;
      return { username, name, password, confirmPassword, educationLevel, birthday, antenatal_visit_counts: Number(antenatal_visit_counts) };
    },
  });

  if (result.isConfirmed && result.value) return result.value;
  return null;
}
